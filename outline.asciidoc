ClojureBridge Curriculum
========================

== Setup

=== Get Leiningen installed

This may be skipped, if the text editor contains Leiningen.

=== Get text editor installed

TODO decide on text editor

Choices:

* Nightcode
* Catnip
* Plain text editor + console

=== Test installation

== Introduction to Programming with Clojure
=== Why Clojure?
=== What is Clojure good at?
=== What does Clojure look like?
=== What is the REPL?
=== Getting help in the REPL
=== Simple values
=== Collections

Vectors and maps are used much more often than sets. I think leaving out sets in this introductory material is a good idea.

==== Vectors
==== Maps
=== Assigning names to values

== Functions

== Making your first program
=== What is the difference between source code and the REPL?
=== Structure of a Clojure project
=== Namespaces
=== TODO

Design first program. Make sure it contains data structures and explain them.

Make sure it uses at least one dependency and show how to add that and use it.

== Introduction to web applications
=== How does the web work?

The simple case, of course. Explain how a request comes in and a response goes back, just like in a function.

=== What is HTML?

Explain that the browser uses a special language to describe how a web page should look. Show them in a browser.

=== Making the simplest web application

Make a hello world app.

=== Making it look nicer with HTML
=== URLs and routes

== Making your web application
=== Making web requests
=== TODO

== Putting your application online
=== What is deployment?
=== Deploying to Heroku
