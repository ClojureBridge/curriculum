(page "module1.html"
      (:require [hoplon.reveal :refer [slideshow intro bullet chapter slide
                                       notes highlight column quicklist]]
                [tailrecursion.hoplon.reload :refer [reload-all]]))

(when (= (-> js/window .-location .-search) "?dev")
  (print "Autoreloading")
  (reload-all))

(html
  (head)
  (body
    (slideshow
     :theme "mozilla-theme.css"
     (intro
      :title "Module 1")
     (chapter
      :title "Introduction to Programming with Clojure"
      (slide
       :title "Why Clojure?"
       (p "Clojure is simple and powerful.")
       (p "Clojure is all-purpose.")
       (p "Clojure is " (em "fun") "."))
      (slide
       :title "What is Clojure good at?"
       (ul
        (li "data processing")
        (li "concurrent applications")
        (li "web applications")
        (li "everything!")))
      (slide
       :title "What does Clojure look like?"
       (highlight
        ;;{{
        (+ 3 4)
        (max 8 17 2)
        (eat "sandwich")
        ;;}}
        ))
      (slide
       :title "What is a REPL?"
       (div
        (column
         :percent 40
         (ul
          (li (b "R") "ead")
          (li (b "E") "val")
          (li (b "P") "rint")
          (li (b "L") "oop")))
        (column
         (img :src "img/instarepl.png")))))
     (chapter
      :title "Simple values"
      (slide
       :title "Value types"
       (quicklist "numbers" "strings" "booleans" "keywords") )
      (slide
       :title "Numbers"
       (highlight
        ;;{{
        ;; integers
        12
        -42

        ;; floats
        10.5
        0.00000072725

        ;; ratios
        1/2
        -7/3
        ;;}}
        ))
      (slide
       :title "Arithmetic"
       (highlight
        ;;{{
        (+ 1 1)  ;=> 1 + 1 = 2
        (- 12 4) ;=> 12 - 4 = 8
        (* 13 2) ;=> 13 * 2 = 26
        (/ 27 9) ;=> 27 / 9 = 3
        ;;}}
        ))
      (slide
       :title "Infix vs. prefix notation"
       (p
        (bullet "Infix: " (code "1 + 2 * 3 / 4 - 5"))
        (bullet "Prefix: " (code "(- (+ 1 (/ (* 2 3) 4)) 5)")))
       (p
        (bullet "Infix: " (code "1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9"))
        (bullet "Prefix: " (code "(+ 1 2 3 4 5 6 7 8 9)"))))
      (slide
       :title "Arithmetic with all number types"
       (highlight
        ;;{{
        (+ 4/3 7/8)    ;=> 53/24
        (- 9 4.2 1/2)  ;=> 4.3
        (* 8 1/4)      ;=> 2
        (/ 27/2 1.5)   ;=> 3.0
        ;;}}
        )) 
      (slide
       :title "Sneak Peek at Strings, Booleans, and Keywords"
       (p "String examples")
       (highlight
        ;;{{
        "Salut tout le monde"
        "Prost!"
        ;;}}
        )
       (p "Keyword examples")
       (highlight :class "language-clojure"
        ;;{{
        :surname
        :birth-date
        :r2
        ;;}}
        )        
       (p "Boolean examples")
       (highlight :class "language-clojure"
        ;;{{
        true
        false
        ;;}}
        )))
     (chapter
      :title "Assigning names to values"
      (slide
       :title "def"
       (highlight
        ;;{{
        (def mangoes 3)
        (def oranges 5)
        (+ mangoes oranges)
        ;;}}
        ))
      (slide
       :title "Exercise: Basic arithmetic"
       (ul
        (li "Take your height in feet and inches and convert it to inches using arithmetic in Clojure.")
        (li "Then convert that to centimeters. There are 2.54 centimeters in an inch.")
        (li "Lastly, ask two people near you for their height in centimeters. Find the average of your heights.")
        (li (p "Bonus: convert that average back to feet and inches.")
            (p "This will be two separate numbers of whole feet and decimal inches.")
            (p (code "(quot x y)")
               " will give you the whole part of the quotient when dividing two numbers.")
            (p (code "(mod x y)")
               " will give you the remainder when dividing two numbers."))))))))
