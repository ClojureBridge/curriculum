(page "module4.html"
      (:require [hoplon.reveal :refer [slideshow intro bullet chapter slide
                                       notes highlight column quicklist]]
                [tailrecursion.hoplon.reload :refer [reload-all]]))

(when (= (-> js/window .-location .-search) "?dev")
  (print "Autoreloading")
  (reload-all))

(html
  (head)
  (body
    (slideshow
     :theme "mozilla-theme.css"
     (intro
      :title "Module 4")
     (chapter
      :title "Strings, Keywords, and Booleans" 
      (slide
       :title "Strings"
       (highlight :class "language-clojure"
        ;;{{
        "Hello world"
        "This is a longer string that I wrote for purposes of an example."
        "Aubrey said, \"I think we should go to the Orange Julius.\""
        ;;}}
        ))
      (slide
       :title "Booleans and nil"
       (p "Answers to questions")
       (highlight :class "language-clojure"
        ;;{{
        true
        false
        nil
        ;;}}
        ))
      (slide
       :title "Keywords"
       (p "Keywords don't have a real world analog like numbers or strings")
       (p "Think of keywords as a special kind of string, one used for labels.")
       (highlight :class "language-clojure"
        ;;{{
        :name
        :input
        ;;}}
        ))
      (slide
       :title "Exercise: Store the name of your hometown"
       (p "Write the name of your hometown as a string and then assign that string to the symbol "
          (code "my-hometown")
          "."))
      (slide
       :title "Exercise: make a function to format names"
       (p "The " (code "str") " function can take any number of arguments, and it "
          "concatenates them together to make a string.")
       (p "Write a function called "
          (code "format-name") " that takes two arguments, " (code "first-name")
          " and " (code "last-name") ". This function should output the name "
          "like so: Last, First."))))))
